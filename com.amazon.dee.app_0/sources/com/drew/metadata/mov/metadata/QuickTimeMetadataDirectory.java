package com.drew.metadata.mov.metadata;

import amazon.speech.simclient.SimError;
import androidx.exifinterface.media.ExifInterface;
import com.amazon.alexa.enrollment.dialogs.DialogConstants;
import com.amazon.alexa.photos.metrics.PhotosMetricsConstants;
import com.amazon.identity.auth.map.device.token.MAPCookie;
import com.dee.app.data.reactnative.bridges.HttpClientModule;
import com.drew.lang.annotations.NotNull;
import com.drew.metadata.exif.makernotes.OlympusCameraSettingsMakernoteDirectory;
import com.drew.metadata.exif.makernotes.SonyType6MakernoteDirectory;
import com.drew.metadata.mov.QuickTimeDirectory;
import com.drew.metadata.photoshop.PhotoshopDirectory;
import com.google.android.exoplayer2.metadata.id3.InternalFrame;
import java.util.HashMap;
/* loaded from: classes2.dex */
public class QuickTimeMetadataDirectory extends QuickTimeDirectory {
    @NotNull
    protected static final HashMap<Integer, String> _tagNameMap = new HashMap<>();
    @NotNull
    protected static final HashMap<String, Integer> _tagIntegerMap = new HashMap<>();

    static {
        _tagIntegerMap.put("com.apple.quicktime.album", 1280);
        _tagIntegerMap.put("com.apple.quicktime.artist", 1281);
        HashMap<String, Integer> hashMap = _tagIntegerMap;
        Integer valueOf = Integer.valueOf((int) OlympusCameraSettingsMakernoteDirectory.TagWhiteBalanceBracket);
        hashMap.put("com.apple.quicktime.artwork", valueOf);
        _tagIntegerMap.put("com.apple.quicktime.author", 1283);
        HashMap<String, Integer> hashMap2 = _tagIntegerMap;
        Integer valueOf2 = Integer.valueOf((int) OlympusCameraSettingsMakernoteDirectory.TagModifiedSaturation);
        hashMap2.put("com.apple.quicktime.comment", valueOf2);
        HashMap<String, Integer> hashMap3 = _tagIntegerMap;
        Integer valueOf3 = Integer.valueOf((int) OlympusCameraSettingsMakernoteDirectory.TagContrastSetting);
        hashMap3.put("com.apple.quicktime.copyright", valueOf3);
        HashMap<String, Integer> hashMap4 = _tagIntegerMap;
        Integer valueOf4 = Integer.valueOf((int) OlympusCameraSettingsMakernoteDirectory.TagSharpnessSetting);
        hashMap4.put("com.apple.quicktime.creationdate", valueOf4);
        _tagIntegerMap.put("com.apple.quicktime.description", Integer.valueOf((int) OlympusCameraSettingsMakernoteDirectory.TagColorSpace));
        _tagIntegerMap.put("com.apple.quicktime.director", 1288);
        _tagIntegerMap.put("com.apple.quicktime.title", Integer.valueOf((int) OlympusCameraSettingsMakernoteDirectory.TagSceneMode));
        _tagIntegerMap.put("com.apple.quicktime.genre", Integer.valueOf((int) OlympusCameraSettingsMakernoteDirectory.TagNoiseReduction));
        _tagIntegerMap.put("com.apple.quicktime.information", Integer.valueOf((int) OlympusCameraSettingsMakernoteDirectory.TagDistortionCorrection));
        _tagIntegerMap.put("com.apple.quicktime.keywords", Integer.valueOf((int) OlympusCameraSettingsMakernoteDirectory.TagShadingCompensation));
        _tagIntegerMap.put("com.apple.quicktime.location.ISO6709", Integer.valueOf((int) OlympusCameraSettingsMakernoteDirectory.TagCompressionFactor));
        _tagIntegerMap.put("com.apple.quicktime.producer", 1294);
        _tagIntegerMap.put("com.apple.quicktime.publisher", Integer.valueOf((int) OlympusCameraSettingsMakernoteDirectory.TagGradation));
        _tagIntegerMap.put("com.apple.quicktime.software", 1296);
        _tagIntegerMap.put("com.apple.quicktime.year", 1297);
        _tagIntegerMap.put("com.apple.quicktime.collection.user", 1298);
        _tagIntegerMap.put("com.apple.quicktime.rating.user", Integer.valueOf((int) SonyType6MakernoteDirectory.TAG_MAKERNOTE_THUMB_OFFSET));
        _tagIntegerMap.put("com.apple.quicktime.location.name", Integer.valueOf((int) SonyType6MakernoteDirectory.TAG_MAKERNOTE_THUMB_LENGTH));
        _tagIntegerMap.put("com.apple.quicktime.location.body", 1301);
        _tagIntegerMap.put("com.apple.quicktime.location.note", 1302);
        _tagIntegerMap.put("com.apple.quicktime.location.role", 1303);
        _tagIntegerMap.put("com.apple.quicktime.location.date", 1304);
        _tagIntegerMap.put("com.apple.quicktime.direction.facing", 1305);
        _tagIntegerMap.put("com.apple.quicktime.direction.motion", 1306);
        _tagIntegerMap.put("com.apple.quicktime.displayname", 1307);
        _tagIntegerMap.put("com.apple.quicktime.content.identifier", 1308);
        _tagIntegerMap.put("com.apple.quicktime.make", 1309);
        _tagIntegerMap.put("com.apple.quicktime.model", 1310);
        _tagIntegerMap.put("com.apple.photos.originating.signature", 1311);
        _tagIntegerMap.put(InternalFrame.ID, 1024);
        _tagIntegerMap.put("@PST", 1025);
        _tagIntegerMap.put("@ppi", 1026);
        _tagIntegerMap.put("@pti", 1027);
        _tagIntegerMap.put("@sti", 1028);
        _tagIntegerMap.put("AACR", 1029);
        _tagIntegerMap.put("CDEK", 1030);
        _tagIntegerMap.put("CDET", 1031);
        _tagIntegerMap.put("GUID", 1032);
        _tagIntegerMap.put("VERS", 1033);
        _tagIntegerMap.put("aART", 1034);
        _tagIntegerMap.put("akID", 1035);
        _tagIntegerMap.put("albm", 1036);
        _tagIntegerMap.put("apID", 1037);
        _tagIntegerMap.put("atID", 1038);
        _tagIntegerMap.put(HttpClientModule.ElementsRequestKey.AUTH, Integer.valueOf((int) PhotoshopDirectory.TAG_ICC_PROFILE_BYTES));
        _tagIntegerMap.put("catg", 1040);
        _tagIntegerMap.put("cnID", Integer.valueOf((int) PhotoshopDirectory.TAG_ICC_UNTAGGED_PROFILE));
        _tagIntegerMap.put("covr", 1042);
        _tagIntegerMap.put("cpil", 1043);
        _tagIntegerMap.put("cprt", Integer.valueOf((int) PhotoshopDirectory.TAG_SEED_NUMBER));
        _tagIntegerMap.put(DialogConstants.DESC, Integer.valueOf((int) PhotoshopDirectory.TAG_UNICODE_ALPHA_NAMES));
        _tagIntegerMap.put("disk", Integer.valueOf((int) PhotoshopDirectory.TAG_INDEXED_COLOR_TABLE_COUNT));
        _tagIntegerMap.put("dscp", Integer.valueOf((int) PhotoshopDirectory.TAG_TRANSPARENCY_INDEX));
        _tagIntegerMap.put("egid", 1048);
        _tagIntegerMap.put("geID", Integer.valueOf((int) PhotoshopDirectory.TAG_GLOBAL_ALTITUDE));
        _tagIntegerMap.put("gnre", Integer.valueOf((int) PhotoshopDirectory.TAG_SLICES));
        _tagIntegerMap.put("grup", Integer.valueOf((int) PhotoshopDirectory.TAG_WORKFLOW_URL));
        _tagIntegerMap.put("gshh", Integer.valueOf((int) PhotoshopDirectory.TAG_JUMP_TO_XPEP));
        _tagIntegerMap.put("gspm", Integer.valueOf((int) PhotoshopDirectory.TAG_ALPHA_IDENTIFIERS));
        _tagIntegerMap.put("gspu", Integer.valueOf((int) PhotoshopDirectory.TAG_URL_LIST));
        _tagIntegerMap.put("gssd", 1055);
        _tagIntegerMap.put("gsst", 1056);
        _tagIntegerMap.put("gstd", Integer.valueOf((int) PhotoshopDirectory.TAG_VERSION));
        _tagIntegerMap.put("hdvd", Integer.valueOf((int) PhotoshopDirectory.TAG_EXIF_DATA_1));
        _tagIntegerMap.put("itnu", Integer.valueOf((int) PhotoshopDirectory.TAG_EXIF_DATA_3));
        _tagIntegerMap.put("keyw", Integer.valueOf((int) PhotoshopDirectory.TAG_XMP_DATA));
        _tagIntegerMap.put("ldes", Integer.valueOf((int) PhotoshopDirectory.TAG_CAPTION_DIGEST));
        _tagIntegerMap.put("pcst", Integer.valueOf((int) PhotoshopDirectory.TAG_PRINT_SCALE));
        _tagIntegerMap.put("perf", 1063);
        _tagIntegerMap.put("pgap", Integer.valueOf((int) PhotoshopDirectory.TAG_PIXEL_ASPECT_RATIO));
        _tagIntegerMap.put("plID", Integer.valueOf((int) PhotoshopDirectory.TAG_LAYER_COMPS));
        _tagIntegerMap.put("prID", Integer.valueOf((int) PhotoshopDirectory.TAG_ALTERNATE_DUOTONE_COLORS));
        _tagIntegerMap.put("purd", Integer.valueOf((int) PhotoshopDirectory.TAG_ALTERNATE_SPOT_COLORS));
        _tagIntegerMap.put("purl", 1068);
        _tagIntegerMap.put("rate", Integer.valueOf((int) PhotoshopDirectory.TAG_LAYER_SELECTION_IDS));
        _tagIntegerMap.put("rldt", Integer.valueOf((int) PhotoshopDirectory.TAG_HDR_TONING_INFO));
        _tagIntegerMap.put("rtng", Integer.valueOf((int) PhotoshopDirectory.TAG_PRINT_INFO));
        _tagIntegerMap.put("sfID", Integer.valueOf((int) PhotoshopDirectory.TAG_LAYER_GROUPS_ENABLED_ID));
        _tagIntegerMap.put("soaa", Integer.valueOf((int) PhotoshopDirectory.TAG_COLOR_SAMPLERS));
        _tagIntegerMap.put("soal", Integer.valueOf((int) PhotoshopDirectory.TAG_MEASUREMENT_SCALE));
        _tagIntegerMap.put("soar", Integer.valueOf((int) PhotoshopDirectory.TAG_TIMELINE_INFORMATION));
        _tagIntegerMap.put("soco", Integer.valueOf((int) PhotoshopDirectory.TAG_SHEET_DISCLOSURE));
        _tagIntegerMap.put("sonm", Integer.valueOf((int) PhotoshopDirectory.TAG_DISPLAY_INFO));
        _tagIntegerMap.put("sosn", Integer.valueOf((int) PhotoshopDirectory.TAG_ONION_SKINS));
        _tagIntegerMap.put("stik", 1079);
        _tagIntegerMap.put("titl", Integer.valueOf((int) PhotoshopDirectory.TAG_COUNT_INFORMATION));
        _tagIntegerMap.put("tmpo", 1081);
        _tagIntegerMap.put("trkn", Integer.valueOf((int) PhotoshopDirectory.TAG_PRINT_INFO_2));
        _tagIntegerMap.put("tven", Integer.valueOf((int) PhotoshopDirectory.TAG_PRINT_STYLE));
        _tagIntegerMap.put("tves", Integer.valueOf((int) PhotoshopDirectory.TAG_MAC_NSPRINTINFO));
        _tagIntegerMap.put("tvnn", Integer.valueOf((int) PhotoshopDirectory.TAG_WIN_DEVMODE));
        _tagIntegerMap.put("tvsh", Integer.valueOf((int) PhotoshopDirectory.TAG_AUTO_SAVE_FILE_PATH));
        _tagIntegerMap.put("tvsn", Integer.valueOf((int) PhotoshopDirectory.TAG_AUTO_SAVE_FORMAT));
        _tagIntegerMap.put("yrrc", Integer.valueOf((int) PhotoshopDirectory.TAG_PATH_SELECTION_STATE));
        _tagIntegerMap.put("ï¿½ART", 1089);
        _tagIntegerMap.put("ï¿½alb", 1090);
        _tagIntegerMap.put("ï¿½cmt", 1091);
        _tagIntegerMap.put("ï¿½com", 1092);
        _tagIntegerMap.put("ï¿½cpy", 1093);
        _tagIntegerMap.put("ï¿½day", 1094);
        _tagIntegerMap.put("ï¿½des", 1095);
        _tagIntegerMap.put("ï¿½enc", 1096);
        _tagIntegerMap.put("ï¿½gen", 1097);
        _tagIntegerMap.put("ï¿½grp", 1098);
        _tagIntegerMap.put("ï¿½lyr", 1099);
        _tagIntegerMap.put("ï¿½nam", 1100);
        _tagIntegerMap.put("ï¿½nrt", Integer.valueOf((int) SimError.SIM_CONNECTION_UNAVAILABLE));
        _tagIntegerMap.put("ï¿½pub", Integer.valueOf((int) SimError.SIM_COMMUNICATION_FAILURE));
        _tagIntegerMap.put("ï¿½too", Integer.valueOf((int) SimError.SIM_INTERNAL_ERROR));
        _tagIntegerMap.put("ï¿½trk", Integer.valueOf((int) SimError.LISTEN_ERROR_BUSY));
        _tagIntegerMap.put("ï¿½wrt", Integer.valueOf((int) SimError.LISTEN_ERROR_TIMEOUT));
        _tagNameMap.put(1280, PhotosMetricsConstants.ALBUM_SUFFIX);
        _tagNameMap.put(1281, ExifInterface.TAG_ARTIST);
        _tagNameMap.put(valueOf, "Artwork");
        _tagNameMap.put(1283, "Author");
        _tagNameMap.put(valueOf2, MAPCookie.KEY_COMMENT);
        _tagNameMap.put(valueOf3, ExifInterface.TAG_COPYRIGHT);
        _tagNameMap.put(valueOf4, "Creation Date");
        _tagNameMap.put(Integer.valueOf((int) OlympusCameraSettingsMakernoteDirectory.TagColorSpace), "Description");
        _tagNameMap.put(1288, "Director");
        _tagNameMap.put(Integer.valueOf((int) OlympusCameraSettingsMakernoteDirectory.TagSceneMode), "Title");
        _tagNameMap.put(Integer.valueOf((int) OlympusCameraSettingsMakernoteDirectory.TagNoiseReduction), "Genre");
        _tagNameMap.put(Integer.valueOf((int) OlympusCameraSettingsMakernoteDirectory.TagDistortionCorrection), "Information");
        _tagNameMap.put(Integer.valueOf((int) OlympusCameraSettingsMakernoteDirectory.TagShadingCompensation), "Keywords");
        _tagNameMap.put(Integer.valueOf((int) OlympusCameraSettingsMakernoteDirectory.TagCompressionFactor), "ISO 6709");
        _tagNameMap.put(1294, "Producer");
        _tagNameMap.put(Integer.valueOf((int) OlympusCameraSettingsMakernoteDirectory.TagGradation), "Publisher");
        _tagNameMap.put(1296, ExifInterface.TAG_SOFTWARE);
        _tagNameMap.put(1297, "Year");
        _tagNameMap.put(1298, "Collection User");
        _tagNameMap.put(Integer.valueOf((int) SonyType6MakernoteDirectory.TAG_MAKERNOTE_THUMB_OFFSET), "Rating User");
        _tagNameMap.put(Integer.valueOf((int) SonyType6MakernoteDirectory.TAG_MAKERNOTE_THUMB_LENGTH), "Location Name");
        _tagNameMap.put(1301, "Location Body");
        _tagNameMap.put(1302, "Location Note");
        _tagNameMap.put(1303, "Location Role");
        _tagNameMap.put(1304, "Location Date");
        _tagNameMap.put(1305, "Direction Facing");
        _tagNameMap.put(1306, "Direction Motion");
        _tagNameMap.put(1307, "Display Name");
        _tagNameMap.put(1308, "Content Identifier");
        _tagNameMap.put(1309, ExifInterface.TAG_MAKE);
        _tagNameMap.put(1310, ExifInterface.TAG_MODEL);
        _tagNameMap.put(1311, "Originating Signature");
        _tagNameMap.put(1024, "iTunes Info");
        _tagNameMap.put(1025, "Parent Short Title");
        _tagNameMap.put(1026, "Parent Product ID");
        _tagNameMap.put(1027, "Parent Title");
        _tagNameMap.put(1028, "Short Title");
        _tagNameMap.put(1029, "Unknown_AACR?");
        _tagNameMap.put(1030, "Unknown_CDEK?");
        _tagNameMap.put(1031, "Unknown_CDET?");
        _tagNameMap.put(1032, "GUID");
        _tagNameMap.put(1033, "Product Version");
        _tagNameMap.put(1034, "Album Artist");
        _tagNameMap.put(1035, "Apple Store Account Type");
        _tagNameMap.put(1036, PhotosMetricsConstants.ALBUM_SUFFIX);
        _tagNameMap.put(1037, "Apple Store Account");
        _tagNameMap.put(1038, "Album Title ID");
        _tagNameMap.put(Integer.valueOf((int) PhotoshopDirectory.TAG_ICC_PROFILE_BYTES), "Author");
        _tagNameMap.put(1040, "Category");
        _tagNameMap.put(Integer.valueOf((int) PhotoshopDirectory.TAG_ICC_UNTAGGED_PROFILE), "Apple Store Catalog ID");
        _tagNameMap.put(1042, "Cover Art");
        _tagNameMap.put(1043, "Compilation");
        _tagNameMap.put(Integer.valueOf((int) PhotoshopDirectory.TAG_SEED_NUMBER), ExifInterface.TAG_COPYRIGHT);
        _tagNameMap.put(Integer.valueOf((int) PhotoshopDirectory.TAG_UNICODE_ALPHA_NAMES), "Description");
        _tagNameMap.put(Integer.valueOf((int) PhotoshopDirectory.TAG_INDEXED_COLOR_TABLE_COUNT), "Disk Number");
        _tagNameMap.put(Integer.valueOf((int) PhotoshopDirectory.TAG_TRANSPARENCY_INDEX), "Description");
        _tagNameMap.put(1048, "Episode Global Unique ID");
        _tagNameMap.put(Integer.valueOf((int) PhotoshopDirectory.TAG_GLOBAL_ALTITUDE), "Genre ID");
        _tagNameMap.put(Integer.valueOf((int) PhotoshopDirectory.TAG_SLICES), "Genre");
        _tagNameMap.put(Integer.valueOf((int) PhotoshopDirectory.TAG_WORKFLOW_URL), "Grouping");
        _tagNameMap.put(Integer.valueOf((int) PhotoshopDirectory.TAG_JUMP_TO_XPEP), "Google Host Header");
        _tagNameMap.put(Integer.valueOf((int) PhotoshopDirectory.TAG_ALPHA_IDENTIFIERS), "Google Ping Message");
        _tagNameMap.put(Integer.valueOf((int) PhotoshopDirectory.TAG_URL_LIST), "Google Ping URL");
        _tagNameMap.put(1055, "Google Source Data");
        _tagNameMap.put(1056, "Google Start Time");
        _tagNameMap.put(Integer.valueOf((int) PhotoshopDirectory.TAG_VERSION), "Google Track Duration");
        _tagNameMap.put(Integer.valueOf((int) PhotoshopDirectory.TAG_EXIF_DATA_1), "HD Video");
        _tagNameMap.put(Integer.valueOf((int) PhotoshopDirectory.TAG_EXIF_DATA_3), "iTunes U");
        _tagNameMap.put(Integer.valueOf((int) PhotoshopDirectory.TAG_XMP_DATA), "Keyword");
        _tagNameMap.put(Integer.valueOf((int) PhotoshopDirectory.TAG_CAPTION_DIGEST), "Long Description");
        _tagNameMap.put(Integer.valueOf((int) PhotoshopDirectory.TAG_PRINT_SCALE), "Podcast");
        _tagNameMap.put(1063, "Performer");
        _tagNameMap.put(Integer.valueOf((int) PhotoshopDirectory.TAG_PIXEL_ASPECT_RATIO), "Play Gap");
        _tagNameMap.put(Integer.valueOf((int) PhotoshopDirectory.TAG_LAYER_COMPS), "Play List ID");
        _tagNameMap.put(Integer.valueOf((int) PhotoshopDirectory.TAG_ALTERNATE_DUOTONE_COLORS), "Product ID");
        _tagNameMap.put(Integer.valueOf((int) PhotoshopDirectory.TAG_ALTERNATE_SPOT_COLORS), "Purchase Date");
        _tagNameMap.put(1068, "Podcast URL");
        _tagNameMap.put(Integer.valueOf((int) PhotoshopDirectory.TAG_LAYER_SELECTION_IDS), "Rating Percent");
        _tagNameMap.put(Integer.valueOf((int) PhotoshopDirectory.TAG_HDR_TONING_INFO), "Release Date");
        _tagNameMap.put(Integer.valueOf((int) PhotoshopDirectory.TAG_PRINT_INFO), "Rating");
        _tagNameMap.put(Integer.valueOf((int) PhotoshopDirectory.TAG_LAYER_GROUPS_ENABLED_ID), "Apple Store Country");
        _tagNameMap.put(Integer.valueOf((int) PhotoshopDirectory.TAG_COLOR_SAMPLERS), "Sort Album Artist");
        _tagNameMap.put(Integer.valueOf((int) PhotoshopDirectory.TAG_MEASUREMENT_SCALE), "Sort Album");
        _tagNameMap.put(Integer.valueOf((int) PhotoshopDirectory.TAG_TIMELINE_INFORMATION), "Sort Artist");
        _tagNameMap.put(Integer.valueOf((int) PhotoshopDirectory.TAG_SHEET_DISCLOSURE), "Sort Composer");
        _tagNameMap.put(Integer.valueOf((int) PhotoshopDirectory.TAG_DISPLAY_INFO), "Sort Name");
        _tagNameMap.put(Integer.valueOf((int) PhotoshopDirectory.TAG_ONION_SKINS), "Sort Show");
        _tagNameMap.put(1079, "Media Type");
        _tagNameMap.put(Integer.valueOf((int) PhotoshopDirectory.TAG_COUNT_INFORMATION), "Title");
        _tagNameMap.put(1081, "Beats Per Minute");
        _tagNameMap.put(Integer.valueOf((int) PhotoshopDirectory.TAG_PRINT_INFO_2), "Track Number");
        _tagNameMap.put(Integer.valueOf((int) PhotoshopDirectory.TAG_PRINT_STYLE), "TV Episode ID");
        _tagNameMap.put(Integer.valueOf((int) PhotoshopDirectory.TAG_MAC_NSPRINTINFO), "TV Episode");
        _tagNameMap.put(Integer.valueOf((int) PhotoshopDirectory.TAG_WIN_DEVMODE), "TV Network Name");
        _tagNameMap.put(Integer.valueOf((int) PhotoshopDirectory.TAG_AUTO_SAVE_FILE_PATH), "TV Show");
        _tagNameMap.put(Integer.valueOf((int) PhotoshopDirectory.TAG_AUTO_SAVE_FORMAT), "TV Season");
        _tagNameMap.put(Integer.valueOf((int) PhotoshopDirectory.TAG_PATH_SELECTION_STATE), "Year");
        _tagNameMap.put(1089, ExifInterface.TAG_ARTIST);
        _tagNameMap.put(1090, PhotosMetricsConstants.ALBUM_SUFFIX);
        _tagNameMap.put(1091, MAPCookie.KEY_COMMENT);
        _tagNameMap.put(1092, "Composer");
        _tagNameMap.put(1093, ExifInterface.TAG_COPYRIGHT);
        _tagNameMap.put(1094, "Content Create Date");
        _tagNameMap.put(1095, "Description");
        _tagNameMap.put(1096, "Encoded By");
        _tagNameMap.put(1097, "Genre");
        _tagNameMap.put(1098, "Grouping");
        _tagNameMap.put(1099, "Lyrics");
        _tagNameMap.put(1100, "Title");
        _tagNameMap.put(Integer.valueOf((int) SimError.SIM_CONNECTION_UNAVAILABLE), "Narrator");
        _tagNameMap.put(Integer.valueOf((int) SimError.SIM_COMMUNICATION_FAILURE), "Publisher");
        _tagNameMap.put(Integer.valueOf((int) SimError.SIM_INTERNAL_ERROR), "Encoder");
        _tagNameMap.put(Integer.valueOf((int) SimError.LISTEN_ERROR_BUSY), "Track");
        _tagNameMap.put(Integer.valueOf((int) SimError.LISTEN_ERROR_TIMEOUT), "Composer");
    }

    public QuickTimeMetadataDirectory() {
        setDescriptor(new QuickTimeMetadataDescriptor(this));
    }

    @Override // com.drew.metadata.mov.QuickTimeDirectory, com.drew.metadata.Directory
    @NotNull
    public String getName() {
        return "QuickTime Metadata";
    }

    @Override // com.drew.metadata.mov.QuickTimeDirectory, com.drew.metadata.Directory
    @NotNull
    protected HashMap<Integer, String> getTagNameMap() {
        return _tagNameMap;
    }
}
